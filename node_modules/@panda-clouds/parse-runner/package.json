{
  "_from": "@panda-clouds/parse-runner@0.24.0",
  "_id": "@panda-clouds/parse-runner@0.24.0",
  "_inBundle": false,
  "_integrity": "sha512-gd5FH4CaGK3uXSftvL4zba4HFQbzgbmQreU80vCT6CDjdpasi3r7nJahhTusMkOQ9KyGlp42xeXVB+yl02OjJg==",
  "_location": "/@panda-clouds/parse-runner",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@panda-clouds%2fparse-runner",
    "fetchSpec": "0.24.0",
    "name": "@panda-clouds/parse-runner",
    "raw": "@panda-clouds/parse-runner@0.24.0",
    "rawSpec": "0.24.0",
    "registry": true,
    "saveSpec": null,
    "scope": "@panda-clouds",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/@panda-clouds/parse-runner/-/parse-runner-0.24.0.tgz",
  "_shasum": "5da775ba38d9cbf70eefb2eafe2f9e237bb78bb9",
  "_spec": "@panda-clouds/parse-runner@0.24.0",
  "_where": "/Users/marcsmith/MMProjects/123-Spoof-Address/spoof-address",
  "author": {
    "email": "mr.marcsmith@me.com",
    "name": "Marc Smith",
    "url": "https://github.com/mrmarcsmith"
  },
  "bugs": {
    "url": "https://github.com/panda-clouds/parse-runner/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@panda-clouds/parse-bash": "^1.1.0",
    "moment": "^2.24.0",
    "mongodb": "^3.2.6",
    "parse": "^2.4.0"
  },
  "deprecated": false,
  "description": "Spins up dockerized Parse Server and Mongo instances for testing",
  "devDependencies": {
    "@panda-clouds/eslint-config-panda-clouds": "^0.9.0",
    "eslint": "^5.16.0",
    "eslint-plugin-jasmine": "^2.10.1",
    "eslint-plugin-prettier": "^3.1.0",
    "jest": "^24.8.0"
  },
  "engines": {
    "node": ">= 8"
  },
  "homepage": "https://github.com/panda-clouds/parse-runner#readme",
  "license": "MIT",
  "main": "src/PCParseRunner.js",
  "name": "@panda-clouds/parse-runner",
  "optionalDependencies": {},
  "readme": "\nPCParseRunner\n=========\nmaintained by [PandaClouds.com](https://pandaclouds.com)\n\n`PCParseRunner` spins up dockerized \"Parse Server\" and \"Mongo\" instances for testing.\n\n\nInstallation\n------------\n\n1. If you want to use this library, you first need to install the [Node.js](https://nodejs.org/en/).\n\n2. When you install node.js, will also be installed [npm](https://www.npmjs.com/).\n\n3. Please run the following command.\n\n```\nnpm install --save-dev @panda-clouds/parse-runner\n```\n\nUsage\n-----\n\n### Node.js\n\n```javascript\nconst PCParseRunner = require('@panda-clouds/parse-runner');\nlet Parse;\n\ndescribe('a describe block', () => {\n\n\tconst parseRunner = new PCParseRunner();\n\n\tparseRunner.parseVersion(version);\n\n\t// begin optional cloud code\n\tconst cloud =\n`\nParse.Cloud.define('myFunction', function(request, response) {\n\treturn 'myResults';\n});\n`;\n\tparseRunner.cloud(cloud);\n\t// end optional cloud code\n\n\tbeforeAll(async () => {\n\t\tParse = await parseRunner.startParseServer();\n\t}, 1000 * 60 * 2);\n\n\tafterAll(async () => {\n\t\tawait parseRunner.cleanUp();\n\t});\n\n\tit('should call a Parse function', async () => {\n\t\tconst result = await Parse.Cloud.run('myFunction');\n\n\t\texpect(result).toBe('myResults');\n\t\texpect(result).not.toBe('superman');\n\t});\n})\n```\n\nYou can replace PCParseRunner with any variable.\n\n\nMethods\n-------\n\n[Unit Tests] are the best resource for learning functionality.\n\n\n\nContributions\n-------------\n\nPull requests are welcome! here is a checklist to speed things up:\n\n- modify `PCParseRunner.js`\n- add unit tests in `PCParseRunner.spec.js`\n- run `npm test`\n- document method in `README.md`\n- add your name to 'Contributors' in `README.md`\n\n\n### Contributors\n\n(Add your name)\n\n- [*] [Marc Smith](https://github.com/mrmarcsmith)\n\n\n[Unit Tests]: https://github.com/panda-clouds/string/blob/master/spec/PCParseRunner.spec.js\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/panda-clouds/parse-runner.git"
  },
  "scripts": {
    "pretest": "eslint .",
    "test": "jest"
  },
  "version": "0.24.0"
}
